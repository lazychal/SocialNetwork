{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Myposts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","maxLength","ProfileInfo","profile","className","s","profileInfo","src","photos","large","fullName","aboutMe","contacts","facebook","lookingForAJobDescription","Preloader","Post","item","message","like","maxLength10","maxLengthCreator","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPosts","React","memo","postElements","posts","map","p","likesCount","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","profileWrapper","ProfileContainer","userId","this","match","params","authorisedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a1b5c856.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__DELPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Myposts_posts__37lyU\",\"item\":\"Myposts_item__rwXhs\",\"postsBlock\":\"Myposts_postsBlock__eO04l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__2oxWc\",\"item\":\"Post_item__3lnEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__27mmW\",\"profileWrapper\":\"Profile_profileWrapper__gmLdb\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // Hooks.\r\n    // useState - используем стейт реакта. Здесь мы положили значение false как\r\n    // первый элемент массива в реактовский стейт, и присвоили имя editMode.\r\n    // Вторым элементом положили ф-ю, которая меняем значение editMode, и назвали setEditMode\r\n    let [editMode, setEditMode] = useState(false);\r\n    //Второй state, для статуса.\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    // Hook. Выполняет содержимое после отрисовки.\r\n    // [props.status] - это зависимость. Чтобы useEffect синхронизировался с этим значением.\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    //Вкл/выкл - режим редактирования\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'Write your status here.'}</span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange}\r\n                       value={status} maxLength='150'\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <img src={profile.photos.large} />\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <div className='full_name'>Full Name: {profile.fullName}</div>\r\n            <div className='about_me'>About Me: {profile.aboutMe}</div>\r\n            <div className='contacts'>Contacts: {profile.contacts.facebook}</div>\r\n            <div className='looking-for-a-job-description'>Looking for a job. Description: {profile.lookingForAJobDescription}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n                <div className={s.item}>\r\n                    <img src='https://pp.userapi.com/c851320/v851320155/5ec09/B_32nSfM78A.jpg?ava=1'/>\r\n                    { props.message }\r\n                    <div>\r\n                        <span>like</span> {props.like}\r\n                    </div>\r\n\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst  maxLength10 = maxLengthCreator(10);\r\n\r\nconst NewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  placeholder='New Post'\r\n                        name='newPostText'\r\n                        component={Textarea}\r\n                        validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n\r\n};\r\n//Обёртка, контейнер\r\nexport const NewPostReduxForm = reduxForm({form: 'post'})(NewPostForm);\r\n// const PostForm = (props) => {\r\n//     const onSubmit = (formData) => {\r\n//         console.log(formData)\r\n//     };\r\n//     return <div>\r\n//         <h3>My Posts</h3>\r\n//         <NewPostReduxForm onSubmit={onSubmit}/>\r\n//     </div>\r\n// };\r\n// export default PostForm;","import React from 'react';\r\nimport s from './Myposts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {NewPostReduxForm} from \"./PostForm\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElements = props.posts.map(p => <Post message={p.message} like={p.likesCount}/>);\r\n    let addNewPost = (values) => {\r\n          props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <NewPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n});\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n// Эта ф-я передаёт state в пропсы.\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n//Эта ф-я передаёт коллбэки в пропсы.\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from './Profile.module.css'\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div className={s.profileWrapper}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if (!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status} updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}