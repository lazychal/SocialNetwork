{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Myposts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/HeaderBackground/HeaderBackground.module.css","components/Profile/Ava_desc/Ava_desc.module.css","components/Profile/Profile.module.css","serviceWorker.js","redux/state.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/HeaderBackground/HeaderBackground.jsx","components/Profile/Ava_desc/Ava_desc.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","rerenderEntireTree","console","log","state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","addPost","newPost","push","updateNewPostText","newText","Header","className","s","header","logo","src","Navbar","nav","item","active","to","activeClassName","Post","props","like","MyPosts","postElements","map","p","newPostElement","React","createRef","postsBlock","ref","value","onChange","text","current","onClick","HeaderBackground","Ava_desc","Profile","DialogItem","path","dialog","Message","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","News","Music","Settings","App","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a7d9c46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__xICAw\",\"item\":\"Navbar_item__1hztw\",\"active\":\"Navbar_active__VU00O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1fne7\",\"dialogsItems\":\"Dialogs_dialogsItems__2tkhY\",\"active\":\"Dialogs_active___GGp_\",\"messages\":\"Dialogs_messages__2_PVr\",\"message\":\"Dialogs_message__3MOZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1c_FS\",\"logo\":\"Header_logo__JRNEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Myposts_posts__37lyU\",\"item\":\"Myposts_item__rwXhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__2oxWc\",\"item\":\"Post_item__3lnEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderBackground\":\"HeaderBackground_HeaderBackground__oTyW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ava_desc\":\"Ava_desc_Ava_desc__22JX1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__27mmW\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let rerenderEntireTree = () => {\r\n    console.log('State changed');\r\n}\r\n\r\nlet state = {\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, message: 'Hello my friends!', likesCount: 15},\r\n            {id: 2, message: 'Just relax', likesCount: 11},\r\n            {id: 3, message: 'How are you&', likesCount: 1},\r\n            {id: 4, message: \"That's good idea!\", likesCount: 14},\r\n            {id: 5, message: 'yo', likesCount: 100}\r\n        ],\r\n        newPostText: 'it-kamasutra.com'\r\n    },\r\n\r\n\r\n    dialogsPage: {\r\n        dialogs: [\r\n            {id: 1, name: 'Vova'},\r\n            {id: 2, name: 'Dimych'},\r\n            {id: 3, name: 'Monika'},\r\n            {id: 4, name: 'Saul'},\r\n            {id: 5, name: 'Jimmy'}\r\n        ],\r\n        messages: [\r\n            {id: 1, message: 'Hi!'},\r\n            {id: 2, message: 'How are you?'},\r\n            {id: 3, message: 'Better call Saul'},\r\n            {id: 4, message: 'yo'},\r\n            {id: 5, message: 'yo'}\r\n        ]\r\n    }\r\n\r\n}\r\n\r\nwindow.state = state;\r\n\r\nexport const addPost = () => {\r\n    let newPost = {\r\n        id: 5,\r\n        message: state.profilePage.newPostText,\r\n        likesCount: 0\r\n    }\r\n    state.profilePage.posts.push(newPost);\r\n    state.profilePage.newPostText = '';\r\n    rerenderEntireTree(state);\r\n}\r\n\r\nexport const updateNewPostText = (newText) => {\r\n\r\n    state.profilePage.newPostText = newText;\r\n    rerenderEntireTree(state);\r\n}\r\n\r\nexport const subscribe = (observer) => {\r\n    rerenderEntireTree = observer;\r\n}\r\n\r\nexport default state;","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <div className={s.logo}>\r\n            <img src='https://www.watersignal.com/wp-content/uploads/2016/05/footstep_icon2-150x150.png'/>\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        {/*Задали сразу два класснейма, для особых стилей {`${s.item} ${s.active}`}*/}\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n                <div className={s.item}>\r\n                    <img src='https://pp.userapi.com/c851320/v851320155/5ec09/B_32nSfM78A.jpg?ava=1'/>\r\n                    { props.message }\r\n                    <div>\r\n                        <span>like</span> {props.like}\r\n                    </div>\r\n\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './Myposts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.posts.map(p => <Post message={p.message} like={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea ref={newPostElement} value={props.newPostText} onChange={onPostChange}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add Post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './HeaderBackground.module.css'\r\n\r\nconst HeaderBackground = () => {\r\n    return (\r\n        <div className={s.HeaderBackground}>\r\n            <img src='https://www.philippinetrails.com/images/luzonimages/rice-terraces-with-guest-1000x200.jpg'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderBackground;","import React from 'react';\r\nimport s from './Ava_desc.module.css'\r\n\r\nconst Ava_desc = () => {\r\n    return (\r\n        <div className={s.Ava_desc}>\r\n            ava + description\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ava_desc;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport HeaderBackground from \"./HeaderBackground/HeaderBackground\";\r\nimport Ava_desc from \"./Ava_desc/Ava_desc\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <HeaderBackground/>\r\n        <Ava_desc/>\r\n        <MyPosts posts={props.profilePage.posts}\r\n                 newPostText={props.profilePage.newPostText}\r\n                 addPost={props.addPost}\r\n                 updateNewPostText={props.updateNewPostText}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>;\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>;\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n\r\n    let messagesElements = props.state.messages.map(m => <Message message={m.message}/>);\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport NavBar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\n\nfunction App(props) {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <NavBar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={ () => <Dialogs\n                               state={props.state.dialogsPage}\n                               addPost={props.addPost}\n                    />}/>\n                    <Route path='/profile' render={ () => <Profile\n                        addPost={props.addPost}\n                        profilePage={props.state.profilePage}\n                        updateNewPostText={props.updateNewPostText}\n                    />}/>\n                    <Route path='/news' render={ () => <News/>}/>\n                    <Route path='/music' render={ () => <Music/>}/>\n                    <Route path='/settings' render={ () => <Settings/>}/>\n\n                </div>\n            </div>\n        </BrowserRouter>\n\n\n    )\n        ;\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport state, {subscribe} from \"./redux/state\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {addPost, updateNewPostText} from \"./redux/state\";\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(<App state={state}\n                         addPost={addPost}\n                         updateNewPostText={updateNewPostText}\n        />,\n        document.getElementById('root'));\n}\n\nrerenderEntireTree(state);\n\nsubscribe(rerenderEntireTree);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}